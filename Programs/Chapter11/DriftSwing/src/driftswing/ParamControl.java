/*
 * Copyright 2013 Peter Garst.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package driftswing;

import java.util.Hashtable;
import javax.swing.JLabel;

/**
 *
 * @author peterg
 */
public class ParamControl extends javax.swing.JPanel {

    protected double minval, maxval;

    /**
     * Creates new form ParamControl
     */
    public ParamControl() {
        initComponents();
        setLabels();
    }

    public String getPname() {
        return paramLabel.getText();
    }

    public void setPname(String pname) {
        paramLabel.setText(pname);
    }

    public double getMinval() {
        return minval;
    }

    public void setMinval(double minval) {
        this.minval = minval;
        setLabels();
    }

    public double getMaxval() {
        return maxval;
    }

    public void setMaxval(double maxval) {
        this.maxval = maxval;
        setLabels();
    }
    
    public double getValue () {
        int val = paramSlider.getValue();
        return minval + val * (maxval - minval) / 100.0;
    }

    private String valueString(double val) {

        // use 2 decimal places
        return String.format("%7.2f", val);
    }

    // Put a label at the min and max.
    // Put one near the middle, rounded to a good value.
    private void setLabels() {

        Hashtable labelTable = new Hashtable();

        labelTable.put(new Integer(0), new JLabel(valueString(minval)));

        // In integer case, round to reasonable value
        double mid = (minval + maxval) / 2;
        labelTable.put(new Integer(50), new JLabel(valueString(mid)));

        labelTable.put(new Integer(100), new JLabel(valueString(maxval)));
        paramSlider.setLabelTable(labelTable);

        setText();
    }

    protected void setText() {

        // Map the 0 - 100 slider range to our min - max range
        int val = paramSlider.getValue();
        double targ = minval + val * (maxval - minval) / 100.0;

        String valstr = valueString(targ);
        paramText.setText(valstr);
    }

    protected void setSlider() {

        String val = paramText.getText();
        try {
            double dval = Double.parseDouble(val);
            double targ = 100 * (dval - minval) / (maxval - minval);
            paramSlider.setValue((int) targ);
        }
        catch (NumberFormatException e) {
            setText();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paramLabel = new javax.swing.JLabel();
        paramSlider = new javax.swing.JSlider();
        paramText = new javax.swing.JTextField();

        setBackground(java.awt.Color.white);

        paramLabel.setText("jLabel1");

        paramSlider.setMajorTickSpacing(20);
        paramSlider.setMinorTickSpacing(10);
        paramSlider.setPaintLabels(true);
        paramSlider.setPaintTicks(true);
        paramSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                paramSliderStateChanged(evt);
            }
        });

        paramText.setColumns(6);
        paramText.setText("jTextField1");
        paramText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paramLabel)
                .addGap(18, 18, 18)
                .addComponent(paramSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(paramText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(paramSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(paramLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(paramText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void paramSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_paramSliderStateChanged
        setText();
    }//GEN-LAST:event_paramSliderStateChanged

    private void paramTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paramTextActionPerformed
        setSlider();
    }//GEN-LAST:event_paramTextActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel paramLabel;
    protected javax.swing.JSlider paramSlider;
    protected javax.swing.JTextField paramText;
    // End of variables declaration//GEN-END:variables
}
